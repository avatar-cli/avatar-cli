---
stages:
  - boilerplate_checks
  - test
  - build_release
  - publish

boilerplate_checks:
  stage: boilerplate_checks
  image: 'node:14-buster'
  except:
    refs:
      - dev
      - main
      - /^v[0-9]+\.[0-9]+\.[0-9]+$/
  script:
    - 'cd "${CI_PROJECT_DIR}/cx"'
    - 'npm install'
    - 'npm run lint'
    - './node_modules/.bin/ts-node ./src/scripts/git_checks.ts'

test:
  stage: test
  image: 'rust:1.45-stretch'
  except:
    refs:
      - dev
      - main
      - /^v[0-9]+\.[0-9]+\.[0-9]+$/
  script:
    - rustup component add clippy
    - cargo clippy

.build_linux_release: &build_linux_release
  stage: build_release
  image: 'rust:$RUST_DOCKER_TAG'
  except:
    refs:
      - /^v[0-9]+\.[0-9]+\.[0-9]+$/
  only:
    refs:
      - main
  script:
    - cargo build --release
    - strip ./target/release/avatar
  artifacts:
    expire_in: never
    name: "linux-$LIBC_TYPE-release-$CI_COMMIT_SHA"
    paths:
      - ./target/release/avatar

build_linux_glibc_release:
  <<: *build_linux_release
  variables:
    RUST_DOCKER_TAG: 1.45-stretch
    LIBC_TYPE: glibc

build_linux_muslc_release:
  <<: *build_linux_release
  variables:
    RUST_DOCKER_TAG: 1.45-alpine3.11
    LIBC_TYPE: muslc
  before_script:
    - apk add gcc g++

gitlab_publish:
  stage: publish
  image: 'node:14-buster'
  except:
    refs:
      - /^v[0-9]+\.[0-9]+\.[0-9]+$/
  only:
    refs:
      - main
  script:
    - 'cd "${CI_PROJECT_DIR}/cx"'
    - 'npm install'
    - './node_modules/.bin/ts-node ./src/scripts/gitlab_publish.ts'

crates_publish:
  stage: publish
  image: 'rust:1.45-stretch'
  except:
    refs:
      - /^v[0-9]+\.[0-9]+\.[0-9]+$/
  only:
    refs:
      - main
  variables:
    CARGO_TOKEN: $CARGO_TOKEN
  script:
    - cargo login ${CARGO_TOKEN}
    - cargo publish --no-verify

docker_publish:
  variables:
    DOCKER_IMAGE_VERSION: '19.03.12'
    DOCKER_HUB_USER: $DOCKER_HUB_USER
    DOCKER_HUB_TOKEN: $DOCKER_HUB_TOKEN
  stage: publish
  image: 'docker:$DOCKER_IMAGE_VERSION-git'
  services:
    - docker:$DOCKER_IMAGE_VERSION-dind
  except:
    refs:
      - /^v[0-9]+\.[0-9]+\.[0-9]+$/
  only:
    refs:
      - main
  script:
    # Gitlab Registry
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --build-arg DOCKER_IMAGE_VERSION=$DOCKER_IMAGE_VERSION --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest

    # Docker Hub Registry
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_TOKEN
    - docker tag $CI_REGISTRY_IMAGE:latest avatarcli/avatar-cli:latest
    - docker push avatarcli/avatar-cli:latest

    # Github Registry
    - docker login -u $GITHUB_REGISTRY_USER -p $GITHUB_REGISTRY_TOKEN
    - docker tag $CI_REGISTRY_IMAGE:latest docker.pkg.github.com/avatar-cli/avatar-cli/avatar-cli:latest
    - docker push docker.pkg.github.com/avatar-cli/avatar-cli/avatar-cli:latest
  dependencies:
    - build_linux_muslc_release

include:
  # See https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
  # See https://gitlab.com/gitlab-org/gitlab-foss/blob/master/lib/gitlab/ci/templates/Security/SAST.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
